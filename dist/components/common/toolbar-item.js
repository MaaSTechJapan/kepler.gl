"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  color: ", ";\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var StyledDiv = _styledComponents["default"].div.attrs({
  className: 'toolbar-item'
})(_templateObject(), function (props) {
  return props.active ? props.theme.titleTextColor : props.theme.textColor;
});

var ToolbarItem = _react["default"].memo(function (props) {
  return /*#__PURE__*/_react["default"].createElement(StyledDiv, {
    active: props.active,
    onClick: function onClick(e) {
      e.stopPropagation();
      e.preventDefault();

      if (typeof props.onClose === 'function') {
        props.onClose();
      }

      props.onClick(e);
    }
  }, /*#__PURE__*/_react["default"].createElement(props.icon, null), /*#__PURE__*/_react["default"].createElement("div", {
    className: "toolbar-item__title"
  }, props.label));
});

ToolbarItem.displayName = 'ToolbarItem';
var _default = ToolbarItem;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2NvbW1vbi90b29sYmFyLWl0ZW0uanMiXSwibmFtZXMiOlsiU3R5bGVkRGl2Iiwic3R5bGVkIiwiZGl2IiwiYXR0cnMiLCJjbGFzc05hbWUiLCJwcm9wcyIsImFjdGl2ZSIsInRoZW1lIiwidGl0bGVUZXh0Q29sb3IiLCJ0ZXh0Q29sb3IiLCJUb29sYmFySXRlbSIsIlJlYWN0IiwibWVtbyIsImUiLCJzdG9wUHJvcGFnYXRpb24iLCJwcmV2ZW50RGVmYXVsdCIsIm9uQ2xvc2UiLCJvbkNsaWNrIiwibGFiZWwiLCJkaXNwbGF5TmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFvQkE7O0FBQ0E7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLFNBQVMsR0FBR0MsNkJBQU9DLEdBQVAsQ0FBV0MsS0FBWCxDQUFpQjtBQUNqQ0MsRUFBQUEsU0FBUyxFQUFFO0FBRHNCLENBQWpCLENBQUgsb0JBR0osVUFBQUMsS0FBSztBQUFBLFNBQUtBLEtBQUssQ0FBQ0MsTUFBTixHQUFlRCxLQUFLLENBQUNFLEtBQU4sQ0FBWUMsY0FBM0IsR0FBNENILEtBQUssQ0FBQ0UsS0FBTixDQUFZRSxTQUE3RDtBQUFBLENBSEQsQ0FBZjs7QUFNQSxJQUFNQyxXQUFXLEdBQUdDLGtCQUFNQyxJQUFOLENBQVcsVUFBQVAsS0FBSztBQUFBLHNCQUNsQyxnQ0FBQyxTQUFEO0FBQ0UsSUFBQSxNQUFNLEVBQUVBLEtBQUssQ0FBQ0MsTUFEaEI7QUFFRSxJQUFBLE9BQU8sRUFBRSxpQkFBQU8sQ0FBQyxFQUFJO0FBQ1pBLE1BQUFBLENBQUMsQ0FBQ0MsZUFBRjtBQUNBRCxNQUFBQSxDQUFDLENBQUNFLGNBQUY7O0FBQ0EsVUFBSSxPQUFPVixLQUFLLENBQUNXLE9BQWIsS0FBeUIsVUFBN0IsRUFBeUM7QUFDdkNYLFFBQUFBLEtBQUssQ0FBQ1csT0FBTjtBQUNEOztBQUNEWCxNQUFBQSxLQUFLLENBQUNZLE9BQU4sQ0FBY0osQ0FBZDtBQUNEO0FBVEgsa0JBV0UsZ0NBQUMsS0FBRCxDQUFPLElBQVAsT0FYRixlQVlFO0FBQUssSUFBQSxTQUFTLEVBQUM7QUFBZixLQUFzQ1IsS0FBSyxDQUFDYSxLQUE1QyxDQVpGLENBRGtDO0FBQUEsQ0FBaEIsQ0FBcEI7O0FBaUJBUixXQUFXLENBQUNTLFdBQVosR0FBMEIsYUFBMUI7ZUFFZVQsVyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAyMCBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xyXG5cclxuY29uc3QgU3R5bGVkRGl2ID0gc3R5bGVkLmRpdi5hdHRycyh7XHJcbiAgY2xhc3NOYW1lOiAndG9vbGJhci1pdGVtJ1xyXG59KWBcclxuICBjb2xvcjogJHtwcm9wcyA9PiAocHJvcHMuYWN0aXZlID8gcHJvcHMudGhlbWUudGl0bGVUZXh0Q29sb3IgOiBwcm9wcy50aGVtZS50ZXh0Q29sb3IpfTtcclxuYDtcclxuXHJcbmNvbnN0IFRvb2xiYXJJdGVtID0gUmVhY3QubWVtbyhwcm9wcyA9PiAoXHJcbiAgPFN0eWxlZERpdlxyXG4gICAgYWN0aXZlPXtwcm9wcy5hY3RpdmV9XHJcbiAgICBvbkNsaWNrPXtlID0+IHtcclxuICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBpZiAodHlwZW9mIHByb3BzLm9uQ2xvc2UgPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgICBwcm9wcy5vbkNsb3NlKCk7XHJcbiAgICAgIH1cclxuICAgICAgcHJvcHMub25DbGljayhlKTtcclxuICAgIH19XHJcbiAgPlxyXG4gICAgPHByb3BzLmljb24gLz5cclxuICAgIDxkaXYgY2xhc3NOYW1lPVwidG9vbGJhci1pdGVtX190aXRsZVwiPntwcm9wcy5sYWJlbH08L2Rpdj5cclxuICA8L1N0eWxlZERpdj5cclxuKSk7XHJcblxyXG5Ub29sYmFySXRlbS5kaXNwbGF5TmFtZSA9ICdUb29sYmFySXRlbSc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUb29sYmFySXRlbTtcclxuIl19